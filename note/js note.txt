<html>
<body>



CHANGER LE CONTENU HTML
<p id="demo">JavaScript can change HTML content.</p>

<button type="button" onclick='document.getElementById("demo").innerHTML = "Hello JavaScript!"'>Click Me!</button>





CHANGER LES VALEUR DATTRIBUT HTML
<button onclick="document.getElementById('myImage').src='pic_bulbon.gif'">Turn on the light</button>

<img id="myImage" src="pic_bulboff.gif" style="width:100px">

<button onclick="document.getElementById('myImage').src='pic_bulboff.gif'">Turn off the light</button>




CHANGER LES STYLES HTML (CSS)

<p id="demo">JavaScript can change the style of an HTML element.</p>

<button type="button" onclick="document.getElementById('demo').style.fontSize='35px'">Click Me!</button>



MASQUER LES ELEMENT HTML 




<p id="demo">JavaScript can change the style of an HTML element.</p>

<button type="button" onclick="document.getElementById('demo').style.fontSize='35px'">Click Me!</button>








AFFICHER DES ELLEMENT HTML

<p>JavaScript can show hidden HTML elements.</p>

<p id="demo" style="display:none">Hello JavaScript!</p>

<button type="button" onclick="document.getElementById('demo').style.display='block'">Click Me!</button>



JavaScript ou aller ? 






LA BALISE <SCRIPT>
<script>
document.getElementById("demo").innerHTML = "My First JavaScript";
</script>



Avantages JavaScript externes
Placer des scripts dans des fichiers externes présente certains avantages:

Il sépare HTML et code
Il facilite la lecture et la maintenance du HTML et du JavaScript
Les fichiers JavaScript mis en cache peuvent accélérer le chargement des pages




Références externes
Les scripts externes peuvent être référencés avec une URL complète ou avec un chemin relatif à la page Web actuelle.

Cet exemple utilise une URL complète pour créer un lien vers un script:



Commentaires sur une seule ligne
Les commentaires sur une seule ligne commencent par //.

Tout texte entre //et la fin de la ligne sera ignoré par JavaScript (ne sera pas exécuté).

Cet exemple utilise un commentaire sur une seule ligne avant chaque ligne de code:






Utilisation de let et const (2015)
Avant 2015, l'utilisation du varmot - clé était le seul moyen de déclarer une variable JavaScript.

La version 2015 de JavaScript (ES6 - ECMAScript 2015) permet d'utiliser le const mot - clé pour définir une variable qui ne peut pas être réaffectée, et le letmot - clé pour définir une variable à portée restreinte.

Parce qu'il est un peu compliqué de décrire la différence entre ces mots-clés, et parce qu'ils ne sont pas pris en charge dans les navigateurs plus anciens, la première partie de ce tutoriel sera le plus souvent utilisée var.

Safari 10 et Edge 14 ont été les premiers navigateurs à prendre entièrement en charge ES6:









</body>
</html> 
